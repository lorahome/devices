/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev */

#ifndef PB_LIGHT_PROTO_LIGHT_LED_STRIP_PB_H_INCLUDED
#define PB_LIGHT_PROTO_LIGHT_LED_STRIP_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _light_LedStripStatus {
    uint32_t sequence;
    uint32_t magic;
    pb_callback_t channels;
/* @@protoc_insertion_point(struct:light_LedStripStatus) */
} light_LedStripStatus;


/* Initializer values for message structs */
#define light_LedStripStatus_init_default        {0, 0, {{NULL}, NULL}}
#define light_LedStripStatus_init_zero           {0, 0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define light_LedStripStatus_sequence_tag        1
#define light_LedStripStatus_magic_tag           2
#define light_LedStripStatus_channels_tag        3

/* Struct field encoding specification for nanopb */
#define light_LedStripStatus_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, UINT32, sequence, 1) \
X(a, STATIC, SINGULAR, UINT32, magic, 2) \
X(a, CALLBACK, REPEATED, UINT32, channels, 3)
#define light_LedStripStatus_CALLBACK pb_default_field_callback
#define light_LedStripStatus_DEFAULT NULL

extern const pb_msgdesc_t light_LedStripStatus_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define light_LedStripStatus_fields &light_LedStripStatus_msg

/* Maximum encoded size of messages (where known) */
/* light_LedStripStatus_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
