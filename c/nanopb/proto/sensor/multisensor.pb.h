/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev */

#ifndef PB_SENSOR_PROTO_SENSOR_MULTISENSOR_PB_H_INCLUDED
#define PB_SENSOR_PROTO_SENSOR_MULTISENSOR_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _sensor_AmbientLight {
    uint32_t value;
    uint32_t white_value;
/* @@protoc_insertion_point(struct:sensor_AmbientLight) */
} sensor_AmbientLight;


typedef struct _sensor_Battery {
    uint32_t percent;
    uint32_t voltage_mv;
/* @@protoc_insertion_point(struct:sensor_Battery) */
} sensor_Battery;


typedef struct _sensor_Humidity {
    float value;
/* @@protoc_insertion_point(struct:sensor_Humidity) */
} sensor_Humidity;


typedef struct _sensor_Temperature {
    float value_c;
    float value_f;
/* @@protoc_insertion_point(struct:sensor_Temperature) */
} sensor_Temperature;


typedef struct _sensor_MultiSensorStatus {
    uint32_t sequence;
    uint32_t magic;
    sensor_Temperature temperature;
    sensor_Humidity humidity;
    sensor_AmbientLight ambient_light;
    sensor_Battery battery;
/* @@protoc_insertion_point(struct:sensor_MultiSensorStatus) */
} sensor_MultiSensorStatus;


/* Initializer values for message structs */
#define sensor_MultiSensorStatus_init_default    {0, 0, sensor_Temperature_init_default, sensor_Humidity_init_default, sensor_AmbientLight_init_default, sensor_Battery_init_default}
#define sensor_Temperature_init_default          {0, 0}
#define sensor_Humidity_init_default             {0}
#define sensor_AmbientLight_init_default         {0, 0}
#define sensor_Battery_init_default              {0, 0}
#define sensor_MultiSensorStatus_init_zero       {0, 0, sensor_Temperature_init_zero, sensor_Humidity_init_zero, sensor_AmbientLight_init_zero, sensor_Battery_init_zero}
#define sensor_Temperature_init_zero             {0, 0}
#define sensor_Humidity_init_zero                {0}
#define sensor_AmbientLight_init_zero            {0, 0}
#define sensor_Battery_init_zero                 {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define sensor_AmbientLight_value_tag            1
#define sensor_AmbientLight_white_value_tag      2
#define sensor_Battery_percent_tag               1
#define sensor_Battery_voltage_mv_tag            2
#define sensor_Humidity_value_tag                1
#define sensor_Temperature_value_c_tag           1
#define sensor_Temperature_value_f_tag           2
#define sensor_MultiSensorStatus_sequence_tag    1
#define sensor_MultiSensorStatus_magic_tag       2
#define sensor_MultiSensorStatus_temperature_tag 3
#define sensor_MultiSensorStatus_humidity_tag    4
#define sensor_MultiSensorStatus_ambient_light_tag 5
#define sensor_MultiSensorStatus_battery_tag     6

/* Struct field encoding specification for nanopb */
#define sensor_MultiSensorStatus_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, UINT32, sequence, 1) \
X(a, STATIC, SINGULAR, UINT32, magic, 2) \
X(a, STATIC, SINGULAR, MESSAGE, temperature, 3) \
X(a, STATIC, SINGULAR, MESSAGE, humidity, 4) \
X(a, STATIC, SINGULAR, MESSAGE, ambient_light, 5) \
X(a, STATIC, SINGULAR, MESSAGE, battery, 6)
#define sensor_MultiSensorStatus_CALLBACK NULL
#define sensor_MultiSensorStatus_DEFAULT NULL
#define sensor_MultiSensorStatus_temperature_MSGTYPE sensor_Temperature
#define sensor_MultiSensorStatus_humidity_MSGTYPE sensor_Humidity
#define sensor_MultiSensorStatus_ambient_light_MSGTYPE sensor_AmbientLight
#define sensor_MultiSensorStatus_battery_MSGTYPE sensor_Battery

#define sensor_Temperature_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, FLOAT, value_c, 1) \
X(a, STATIC, SINGULAR, FLOAT, value_f, 2)
#define sensor_Temperature_CALLBACK NULL
#define sensor_Temperature_DEFAULT NULL

#define sensor_Humidity_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, FLOAT, value, 1)
#define sensor_Humidity_CALLBACK NULL
#define sensor_Humidity_DEFAULT NULL

#define sensor_AmbientLight_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, UINT32, value, 1) \
X(a, STATIC, SINGULAR, UINT32, white_value, 2)
#define sensor_AmbientLight_CALLBACK NULL
#define sensor_AmbientLight_DEFAULT NULL

#define sensor_Battery_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, UINT32, percent, 1) \
X(a, STATIC, SINGULAR, UINT32, voltage_mv, 2)
#define sensor_Battery_CALLBACK NULL
#define sensor_Battery_DEFAULT NULL

extern const pb_msgdesc_t sensor_MultiSensorStatus_msg;
extern const pb_msgdesc_t sensor_Temperature_msg;
extern const pb_msgdesc_t sensor_Humidity_msg;
extern const pb_msgdesc_t sensor_AmbientLight_msg;
extern const pb_msgdesc_t sensor_Battery_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define sensor_MultiSensorStatus_fields &sensor_MultiSensorStatus_msg
#define sensor_Temperature_fields &sensor_Temperature_msg
#define sensor_Humidity_fields &sensor_Humidity_msg
#define sensor_AmbientLight_fields &sensor_AmbientLight_msg
#define sensor_Battery_fields &sensor_Battery_msg

/* Maximum encoded size of messages (where known) */
#define sensor_MultiSensorStatus_size            59
#define sensor_Temperature_size                  10
#define sensor_Humidity_size                     5
#define sensor_AmbientLight_size                 12
#define sensor_Battery_size                      12

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
