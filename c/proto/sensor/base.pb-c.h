/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: proto/sensor/base.proto */

#ifndef PROTOBUF_C_proto_2fsensor_2fbase_2eproto__INCLUDED
#define PROTOBUF_C_proto_2fsensor_2fbase_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Sensors__Temperature Sensors__Temperature;
typedef struct _Sensors__Humidity Sensors__Humidity;
typedef struct _Sensors__AmbientLight Sensors__AmbientLight;
typedef struct _Sensors__Battery Sensors__Battery;


/* --- enums --- */


/* --- messages --- */

struct  _Sensors__Temperature
{
  ProtobufCMessage base;
  float value_c;
  float value_f;
};
#define SENSORS__TEMPERATURE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sensors__temperature__descriptor) \
    , 0, 0 }


struct  _Sensors__Humidity
{
  ProtobufCMessage base;
  float value;
};
#define SENSORS__HUMIDITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sensors__humidity__descriptor) \
    , 0 }


struct  _Sensors__AmbientLight
{
  ProtobufCMessage base;
  uint32_t value;
};
#define SENSORS__AMBIENT_LIGHT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sensors__ambient_light__descriptor) \
    , 0 }


struct  _Sensors__Battery
{
  ProtobufCMessage base;
  uint32_t percent;
  uint32_t voltage_mv;
};
#define SENSORS__BATTERY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sensors__battery__descriptor) \
    , 0, 0 }


/* Sensors__Temperature methods */
void   sensors__temperature__init
                     (Sensors__Temperature         *message);
size_t sensors__temperature__get_packed_size
                     (const Sensors__Temperature   *message);
size_t sensors__temperature__pack
                     (const Sensors__Temperature   *message,
                      uint8_t             *out);
size_t sensors__temperature__pack_to_buffer
                     (const Sensors__Temperature   *message,
                      ProtobufCBuffer     *buffer);
Sensors__Temperature *
       sensors__temperature__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sensors__temperature__free_unpacked
                     (Sensors__Temperature *message,
                      ProtobufCAllocator *allocator);
/* Sensors__Humidity methods */
void   sensors__humidity__init
                     (Sensors__Humidity         *message);
size_t sensors__humidity__get_packed_size
                     (const Sensors__Humidity   *message);
size_t sensors__humidity__pack
                     (const Sensors__Humidity   *message,
                      uint8_t             *out);
size_t sensors__humidity__pack_to_buffer
                     (const Sensors__Humidity   *message,
                      ProtobufCBuffer     *buffer);
Sensors__Humidity *
       sensors__humidity__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sensors__humidity__free_unpacked
                     (Sensors__Humidity *message,
                      ProtobufCAllocator *allocator);
/* Sensors__AmbientLight methods */
void   sensors__ambient_light__init
                     (Sensors__AmbientLight         *message);
size_t sensors__ambient_light__get_packed_size
                     (const Sensors__AmbientLight   *message);
size_t sensors__ambient_light__pack
                     (const Sensors__AmbientLight   *message,
                      uint8_t             *out);
size_t sensors__ambient_light__pack_to_buffer
                     (const Sensors__AmbientLight   *message,
                      ProtobufCBuffer     *buffer);
Sensors__AmbientLight *
       sensors__ambient_light__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sensors__ambient_light__free_unpacked
                     (Sensors__AmbientLight *message,
                      ProtobufCAllocator *allocator);
/* Sensors__Battery methods */
void   sensors__battery__init
                     (Sensors__Battery         *message);
size_t sensors__battery__get_packed_size
                     (const Sensors__Battery   *message);
size_t sensors__battery__pack
                     (const Sensors__Battery   *message,
                      uint8_t             *out);
size_t sensors__battery__pack_to_buffer
                     (const Sensors__Battery   *message,
                      ProtobufCBuffer     *buffer);
Sensors__Battery *
       sensors__battery__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sensors__battery__free_unpacked
                     (Sensors__Battery *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Sensors__Temperature_Closure)
                 (const Sensors__Temperature *message,
                  void *closure_data);
typedef void (*Sensors__Humidity_Closure)
                 (const Sensors__Humidity *message,
                  void *closure_data);
typedef void (*Sensors__AmbientLight_Closure)
                 (const Sensors__AmbientLight *message,
                  void *closure_data);
typedef void (*Sensors__Battery_Closure)
                 (const Sensors__Battery *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor sensors__temperature__descriptor;
extern const ProtobufCMessageDescriptor sensors__humidity__descriptor;
extern const ProtobufCMessageDescriptor sensors__ambient_light__descriptor;
extern const ProtobufCMessageDescriptor sensors__battery__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_proto_2fsensor_2fbase_2eproto__INCLUDED */
