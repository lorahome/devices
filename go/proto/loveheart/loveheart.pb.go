// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/loveheart/loveheart.proto

package loveheart

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LoveHeartStatus struct {
	// Sequence / magic number - always 0xddeeff
	Sequence uint32 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Magic    uint32 `protobuf:"varint,2,opt,name=magic,proto3" json:"magic,omitempty"`
	// SI7021
	Temperature uint32 `protobuf:"varint,3,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Humidity    uint32 `protobuf:"varint,4,opt,name=humidity,proto3" json:"humidity,omitempty"`
	// VEML6030
	LightAls   uint32 `protobuf:"varint,5,opt,name=light_als,json=lightAls,proto3" json:"light_als,omitempty"`
	LightWhite uint32 `protobuf:"varint,6,opt,name=light_white,json=lightWhite,proto3" json:"light_white,omitempty"`
	// Battery
	Voltage float32 `protobuf:"fixed32,7,opt,name=voltage,proto3" json:"voltage,omitempty"`
	// Animation state
	Animation bool `protobuf:"varint,8,opt,name=animation,proto3" json:"animation,omitempty"`
	// Errors
	ErrosI2C             uint32   `protobuf:"varint,20,opt,name=erros_i2c,json=errosI2c,proto3" json:"erros_i2c,omitempty"`
	ErrorsSpi            uint32   `protobuf:"varint,21,opt,name=errors_spi,json=errorsSpi,proto3" json:"errors_spi,omitempty"`
	ErrorsRadio          uint32   `protobuf:"varint,22,opt,name=errors_radio,json=errorsRadio,proto3" json:"errors_radio,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoveHeartStatus) Reset()         { *m = LoveHeartStatus{} }
func (m *LoveHeartStatus) String() string { return proto.CompactTextString(m) }
func (*LoveHeartStatus) ProtoMessage()    {}
func (*LoveHeartStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_28e1cccb0b253e2c, []int{0}
}

func (m *LoveHeartStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoveHeartStatus.Unmarshal(m, b)
}
func (m *LoveHeartStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoveHeartStatus.Marshal(b, m, deterministic)
}
func (m *LoveHeartStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoveHeartStatus.Merge(m, src)
}
func (m *LoveHeartStatus) XXX_Size() int {
	return xxx_messageInfo_LoveHeartStatus.Size(m)
}
func (m *LoveHeartStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_LoveHeartStatus.DiscardUnknown(m)
}

var xxx_messageInfo_LoveHeartStatus proto.InternalMessageInfo

func (m *LoveHeartStatus) GetSequence() uint32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *LoveHeartStatus) GetMagic() uint32 {
	if m != nil {
		return m.Magic
	}
	return 0
}

func (m *LoveHeartStatus) GetTemperature() uint32 {
	if m != nil {
		return m.Temperature
	}
	return 0
}

func (m *LoveHeartStatus) GetHumidity() uint32 {
	if m != nil {
		return m.Humidity
	}
	return 0
}

func (m *LoveHeartStatus) GetLightAls() uint32 {
	if m != nil {
		return m.LightAls
	}
	return 0
}

func (m *LoveHeartStatus) GetLightWhite() uint32 {
	if m != nil {
		return m.LightWhite
	}
	return 0
}

func (m *LoveHeartStatus) GetVoltage() float32 {
	if m != nil {
		return m.Voltage
	}
	return 0
}

func (m *LoveHeartStatus) GetAnimation() bool {
	if m != nil {
		return m.Animation
	}
	return false
}

func (m *LoveHeartStatus) GetErrosI2C() uint32 {
	if m != nil {
		return m.ErrosI2C
	}
	return 0
}

func (m *LoveHeartStatus) GetErrorsSpi() uint32 {
	if m != nil {
		return m.ErrorsSpi
	}
	return 0
}

func (m *LoveHeartStatus) GetErrorsRadio() uint32 {
	if m != nil {
		return m.ErrorsRadio
	}
	return 0
}

type LoveHeartStatusResponse struct {
	// Sequence / magic number - always 0xddeeff
	Sequence uint32 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Magic    uint32 `protobuf:"varint,2,opt,name=magic,proto3" json:"magic,omitempty"`
	// Show heart animation or not
	EnableAnimation      bool     `protobuf:"varint,3,opt,name=enable_animation,json=enableAnimation,proto3" json:"enable_animation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoveHeartStatusResponse) Reset()         { *m = LoveHeartStatusResponse{} }
func (m *LoveHeartStatusResponse) String() string { return proto.CompactTextString(m) }
func (*LoveHeartStatusResponse) ProtoMessage()    {}
func (*LoveHeartStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_28e1cccb0b253e2c, []int{1}
}

func (m *LoveHeartStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoveHeartStatusResponse.Unmarshal(m, b)
}
func (m *LoveHeartStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoveHeartStatusResponse.Marshal(b, m, deterministic)
}
func (m *LoveHeartStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoveHeartStatusResponse.Merge(m, src)
}
func (m *LoveHeartStatusResponse) XXX_Size() int {
	return xxx_messageInfo_LoveHeartStatusResponse.Size(m)
}
func (m *LoveHeartStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoveHeartStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoveHeartStatusResponse proto.InternalMessageInfo

func (m *LoveHeartStatusResponse) GetSequence() uint32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *LoveHeartStatusResponse) GetMagic() uint32 {
	if m != nil {
		return m.Magic
	}
	return 0
}

func (m *LoveHeartStatusResponse) GetEnableAnimation() bool {
	if m != nil {
		return m.EnableAnimation
	}
	return false
}

func init() {
	proto.RegisterType((*LoveHeartStatus)(nil), "loveheart.LoveHeartStatus")
	proto.RegisterType((*LoveHeartStatusResponse)(nil), "loveheart.LoveHeartStatusResponse")
}

func init() { proto.RegisterFile("proto/loveheart/loveheart.proto", fileDescriptor_28e1cccb0b253e2c) }

var fileDescriptor_28e1cccb0b253e2c = []byte{
	// 304 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0xcb, 0x4e, 0xeb, 0x30,
	0x10, 0x86, 0x95, 0xf6, 0xf4, 0x92, 0xe9, 0x41, 0x45, 0x56, 0x81, 0x11, 0x17, 0x35, 0x74, 0x55,
	0x36, 0x20, 0x95, 0x27, 0xe8, 0x0e, 0x24, 0x56, 0xe9, 0x82, 0x65, 0xe4, 0xa6, 0xa3, 0xc6, 0x92,
	0x13, 0x07, 0xdb, 0x09, 0xe2, 0x45, 0x79, 0x1e, 0x64, 0x9b, 0x36, 0x88, 0x25, 0x3b, 0xff, 0xdf,
	0x27, 0xcd, 0xe8, 0x1f, 0xc3, 0xbc, 0xd6, 0xca, 0xaa, 0x07, 0xa9, 0x5a, 0x2a, 0x88, 0x6b, 0xdb,
	0xbd, 0xee, 0xbd, 0x61, 0xf1, 0x11, 0x2c, 0x3e, 0x7b, 0x30, 0x7d, 0x51, 0x2d, 0x3d, 0xb9, 0xb4,
	0xb1, 0xdc, 0x36, 0x86, 0x5d, 0xc2, 0xd8, 0xd0, 0x5b, 0x43, 0x55, 0x4e, 0x18, 0x25, 0xd1, 0xf2,
	0x24, 0x3d, 0x66, 0x36, 0x83, 0x41, 0xc9, 0xf7, 0x22, 0xc7, 0x9e, 0x17, 0x21, 0xb0, 0x04, 0x26,
	0x96, 0xca, 0x9a, 0x34, 0xb7, 0x8d, 0x26, 0xec, 0x7b, 0xf7, 0x13, 0xb9, 0x99, 0x45, 0x53, 0x8a,
	0x9d, 0xb0, 0x1f, 0xf8, 0x2f, 0xcc, 0x3c, 0x64, 0x76, 0x05, 0xb1, 0x14, 0xfb, 0xc2, 0x66, 0x5c,
	0x1a, 0x1c, 0x04, 0xe9, 0xc1, 0x5a, 0x1a, 0x36, 0x87, 0x49, 0x90, 0xef, 0x85, 0xb0, 0x84, 0x43,
	0xaf, 0xc1, 0xa3, 0x57, 0x47, 0x18, 0xc2, 0xa8, 0x55, 0xd2, 0xf2, 0x3d, 0xe1, 0x28, 0x89, 0x96,
	0xbd, 0xf4, 0x10, 0xd9, 0x35, 0xc4, 0xbc, 0x12, 0x25, 0xb7, 0x42, 0x55, 0x38, 0x4e, 0xa2, 0xe5,
	0x38, 0xed, 0x80, 0xdb, 0x4a, 0x5a, 0x2b, 0x93, 0x89, 0x55, 0x8e, 0xb3, 0xb0, 0xd5, 0x83, 0xe7,
	0x55, 0xce, 0x6e, 0x00, 0xdc, 0x5b, 0x9b, 0xcc, 0xd4, 0x02, 0xcf, 0xbc, 0x8d, 0x03, 0xd9, 0xd4,
	0x82, 0xdd, 0xc2, 0xff, 0x6f, 0xad, 0xf9, 0x4e, 0x28, 0x3c, 0x0f, 0x85, 0x03, 0x4b, 0x1d, 0x5a,
	0xb4, 0x70, 0xf1, 0xeb, 0xae, 0x29, 0x99, 0x5a, 0x55, 0x86, 0xfe, 0x70, 0xdf, 0x3b, 0x38, 0xa5,
	0x8a, 0x6f, 0x25, 0x65, 0x5d, 0xa1, 0xbe, 0x2f, 0x34, 0x0d, 0x7c, 0x7d, 0xc0, 0xdb, 0xa1, 0xff,
	0xe2, 0xc7, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x93, 0x2b, 0x6f, 0x75, 0x05, 0x02, 0x00, 0x00,
}
