/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev */

#ifndef PB_HOME_DEVICE_PB_H_INCLUDED
#define PB_HOME_DEVICE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _home_StatusReport {
    uint64_t device_id;
    pb_callback_t details;
/* @@protoc_insertion_point(struct:home_StatusReport) */
} home_StatusReport;


/* Initializer values for message structs */
#define home_StatusReport_init_default           {0, {{NULL}, NULL}}
#define home_StatusReport_init_zero              {0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define home_StatusReport_device_id_tag          1
#define home_StatusReport_details_tag            2

/* Struct field encoding specification for nanopb */
#define home_StatusReport_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, UINT64, device_id, 1) \
X(a, CALLBACK, SINGULAR, BYTES, details, 2)
#define home_StatusReport_CALLBACK pb_default_field_callback
#define home_StatusReport_DEFAULT NULL

extern const pb_msgdesc_t home_StatusReport_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define home_StatusReport_fields &home_StatusReport_msg

/* Maximum encoded size of messages (where known) */
/* home_StatusReport_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
