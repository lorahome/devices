/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev */

#ifndef PB_OPENIOT_DEVICE_PB_H_INCLUDED
#define PB_OPENIOT_DEVICE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _openiot_StatusReport {
    uint64_t device_id;
    uint32_t message_size;
    pb_callback_t details;
/* @@protoc_insertion_point(struct:openiot_StatusReport) */
} openiot_StatusReport;


/* Initializer values for message structs */
#define openiot_StatusReport_init_default        {0, 0, {{NULL}, NULL}}
#define openiot_StatusReport_init_zero           {0, 0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define openiot_StatusReport_device_id_tag       1
#define openiot_StatusReport_message_size_tag    2
#define openiot_StatusReport_details_tag         3

/* Struct field encoding specification for nanopb */
#define openiot_StatusReport_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, UINT64, device_id, 1) \
X(a, STATIC, SINGULAR, UINT32, message_size, 2) \
X(a, CALLBACK, SINGULAR, BYTES, details, 3)
#define openiot_StatusReport_CALLBACK pb_default_field_callback
#define openiot_StatusReport_DEFAULT NULL

extern const pb_msgdesc_t openiot_StatusReport_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define openiot_StatusReport_fields &openiot_StatusReport_msg

/* Maximum encoded size of messages (where known) */
/* openiot_StatusReport_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
